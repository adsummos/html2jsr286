= 0.6.1
- compiles for 5.2.0

= 0.6.0
- main function cleanup
- added log4j xml configuration
- disable cookies (since they didn't work properly)
- fix <head> inline JavaScript parsing, but HTMLparser cannot handle inline tags in inline code!
- get the Locale from the request and pass it to Rails
- compiles for 5.1.1

= 0.5.2
- %UID% path parameters is now being replaced by the user's ID or doAsUser.

= 0.5.1
- support for %GID% path parameter, which is replaced by the Liferay group the portlet is in.

= 0.5.0
- refactored some POST-related functions. now link_to :method => post is supported.

= 0.4.2
- cleaned useless imports.

= 0.4.1
- fixed regressions from 0.4.0

= 0.4.0
- changed the XML configuration. Now using three parameters: host, servlet and
  route. if the host is null, using the host from the HTTP request.
  useful with several virtualhosts on the same server.

= 0.3.1
- fixed 'port -1' problem
- fixed the 'you are being redirected' problem resulting from POST request redirect

= 0.3.0
- extracts content-type and encoding from meta tags
- keeps JavaScript and CSS 'src' tags intact, no more inline parsing

= 0.2.1
Released 29.7.2008
- exit_portlet parameter

= 0.2.0
Released 1.7.2008
- supports HTTP REFERER
- sets the portlet title to the html page title
- supports url parameters
- does not change external links
- session cookie works with Webrick

= 0.1.0
- css and javascript parsing from external files, head and body sections.
- css body tag is prefixed with portlet:namespace
- POST method is supported from an external Rails server running on webrick,
  authentication problems with Rails in a WAR file
- EDIT mode has baseUrl and requestPath parameters

= 0.0.4
- Rails host, base and request url into the portlet.xml

= 0.0.3
Simple navigation with filtering works. The url is coded into the portlet by
exchanging all Rails <a href urls with PortletURL:

          PortletURL pu = response.createRenderURL();
          pu.setParameter("url",path);
          newUrl = new java.net.URL(pu.toString());

= 0.0.2
Simple Rails page (any web page, actually) loading and displaying works.

